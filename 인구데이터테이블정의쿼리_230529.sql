CREATE TABLE TB_POPLTN_DATA (
    ADMINIST_ZONE VARCHAR(150),
    TOT_POPLTN_CO INT(10),
    AGE_SCTN_POPLTN_CO INT(10),
    POPLTN_CO_0_9 INT(10),
    POPLTN_CO_10_19 INT(10),
    POPLTN_CO_20_29 INT(10),
    POPLTN_CO_30_39 INT(10),
    POPLTN_CO_40_49 INT(10),
    POPLTN_CO_50_59 INT(10),
    POPLTN_CO_60_69 INT(10),
    POPLTN_CO_70_79 INT(10),
    POPLTN_CO_80_89 INT(10),
    POPLTN_CO_90_99 INT(10),
    POPLTN_CO_100 INT(10),
    MALE_TOT_POPLTN_CO INT(10),
    MALE_AGE_SCTN_POPLTN_CO INT(10),
    MALE_POPLTN_CO_0_9 INT(10),
    MALE_POPLTN_CO_10_19 INT(10),
    MALE_POPLTN_CO_20_29 INT(10),
    MALE_POPLTN_CO_30_39 INT(10),
    MALE_POPLTN_CO_40_49 INT(10),
    MALE_POPLTN_CO_50_59 INT(10),
    MALE_POPLTN_CO_60_69 INT(10),
    MALE_POPLTN_CO_70_79 INT(10),
    MALE_POPLTN_CO_80_89 INT(10),
    MALE_POPLTN_CO_90_99 INT(10),
    MALE_POPLTN_CO_100 INT(10),
    FEMALE_TOT_POPLTN_CO INT(10),
    FEMALE_AGE_SCTN_POPLTN_CO INT(10),
    FEMALE_POPLTN_CO_0_9 INT(10),
    FEMALE_POPLTN_CO_10_19 INT(10),
    FEMALE_POPLTN_CO_20_29 INT(10),
    FEMALE_POPLTN_CO_30_39 INT(10),
    FEMALE_POPLTN_CO_40_49 INT(10),
    FEMALE_POPLTN_CO_50_59 INT(10),
    FEMALE_POPLTN_CO_60_69 INT(10),
    FEMALE_POPLTN_CO_70_79 INT(10),
    FEMALE_POPLTN_CO_80_89 INT(10),
    FEMALE_POPLTN_CO_90_99 INT(10),
    FEMALE_POPLTN_CO_100 INT(10)
);

SELECT * from TB_POPLTN_DATA;

CREATE TABLE TB_POPLTN (
  ADMINIST_ZONE_NO VARCHAR(10),
  ADMINIST_ZONE_NM VARCHAR(150),
  STD_MT VARCHAR(6),
  POPLTN_SE_CD VARCHAR(1),
  AGRDE_SE_CD VARCHAR(3),
  POPLTN_CNT INT(10),
  CONSTRAINT TB_POPLTN_PK PRIMARY KEY (ADMINIST_ZONE_NO, STD_MT, POPLTN_SE_CD, AGRDE_SE_CD)
);

INSERT INTO TB_POPLTN
SELECT A.ADMINIST_ZONE_NO, A.ADMINIST_ZONE_NM, A.STD_MT
     , CASE WHEN LVL1 = 1 THEN 'M' WHEN LVL1 = 2 THEN 'F' WHEN LVL1 = 3 THEN 'T' END AS POPLTN_SE_CD
     , CASE WHEN LVL2 = 1  THEN '000' WHEN LVL2 = 2  THEN '010' WHEN LVL2 = 3  THEN '020'
            WHEN LVL2 = 4  THEN '030' WHEN LVL2 = 5  THEN '040' WHEN LVL2 = 6  THEN '050'
            WHEN LVL2 = 7  THEN '060' WHEN LVL2 = 8  THEN '070' WHEN LVL2 = 9  THEN '080' WHEN LVL2 = 10 THEN '090' WHEN LVL2 = 11 THEN '100' END AS AGRDE_SE_CD
     , CASE WHEN LVL1 = 1 AND LVL2 = 1  THEN MALE_POPLTN_CO_0_9     WHEN LVL1 = 1 AND LVL2 = 2  THEN MALE_POPLTN_CO_10_19
            WHEN LVL1 = 1 AND LVL2 = 3  THEN MALE_POPLTN_CO_20_29   WHEN LVL1 = 1 AND LVL2 = 4  THEN MALE_POPLTN_CO_30_39
            WHEN LVL1 = 1 AND LVL2 = 5  THEN MALE_POPLTN_CO_40_49   WHEN LVL1 = 1 AND LVL2 = 6  THEN MALE_POPLTN_CO_50_59
            WHEN LVL1 = 1 AND LVL2 = 7  THEN MALE_POPLTN_CO_60_69   WHEN LVL1 = 1 AND LVL2 = 8  THEN MALE_POPLTN_CO_70_79
            WHEN LVL1 = 1 AND LVL2 = 9  THEN MALE_POPLTN_CO_80_89   WHEN LVL1 = 1 AND LVL2 = 10 THEN MALE_POPLTN_CO_90_99
            WHEN LVL1 = 1 AND LVL2 = 11 THEN MALE_POPLTN_CO_100     WHEN LVL1 = 2 AND LVL2 = 1  THEN FEMALE_POPLTN_CO_0_9
            WHEN LVL1 = 2 AND LVL2 = 2  THEN FEMALE_POPLTN_CO_10_19 WHEN LVL1 = 2 AND LVL2 = 3  THEN FEMALE_POPLTN_CO_20_29
            WHEN LVL1 = 2 AND LVL2 = 4  THEN FEMALE_POPLTN_CO_30_39 WHEN LVL1 = 2 AND LVL2 = 5  THEN FEMALE_POPLTN_CO_40_49
            WHEN LVL1 = 2 AND LVL2 = 6  THEN FEMALE_POPLTN_CO_50_59 WHEN LVL1 = 2 AND LVL2 = 7  THEN FEMALE_POPLTN_CO_60_69
            WHEN LVL1 = 2 AND LVL2 = 8  THEN FEMALE_POPLTN_CO_70_79 WHEN LVL1 = 2 AND LVL2 = 9  THEN FEMALE_POPLTN_CO_80_89
            WHEN LVL1 = 2 AND LVL2 = 10 THEN FEMALE_POPLTN_CO_90_99 WHEN LVL1 = 2 AND LVL2 = 11 THEN FEMALE_POPLTN_CO_100
            WHEN LVL1 = 3 AND LVL2 = 1  THEN POPLTN_CO_0_9          WHEN LVL1 = 3 AND LVL2 = 2  THEN POPLTN_CO_10_19
            WHEN LVL1 = 3 AND LVL2 = 3  THEN POPLTN_CO_20_29        WHEN LVL1 = 3 AND LVL2 = 4  THEN POPLTN_CO_30_39
            WHEN LVL1 = 3 AND LVL2 = 5  THEN POPLTN_CO_40_49        WHEN LVL1 = 3 AND LVL2 = 6  THEN POPLTN_CO_50_59
            WHEN LVL1 = 3 AND LVL2 = 7  THEN POPLTN_CO_60_69        WHEN LVL1 = 3 AND LVL2 = 8  THEN POPLTN_CO_70_79
            WHEN LVL1 = 3 AND LVL2 = 9  THEN POPLTN_CO_80_89        WHEN LVL1 = 3 AND LVL2 = 10 THEN POPLTN_CO_90_99
            WHEN LVL1 = 3 AND LVL2 = 11 THEN POPLTN_CO_100 END AS POPLTN_CNT
  FROM
     (
      SELECT SUBSTR(ADMINIST_ZONE, INSTR(ADMINIST_ZONE, '(') + 1, 10) AS ADMINIST_ZONE_NO
           , SUBSTR(ADMINIST_ZONE, 1, INSTR(ADMINIST_ZONE, '(')-1) AS ADMINIST_ZONE_NM,
             '202304' AS STD_MT
           , MALE_POPLTN_CO_0_9    , MALE_POPLTN_CO_10_19  , MALE_POPLTN_CO_20_29
           , MALE_POPLTN_CO_30_39  , MALE_POPLTN_CO_40_49  , MALE_POPLTN_CO_50_59
           , MALE_POPLTN_CO_60_69  , MALE_POPLTN_CO_70_79  , MALE_POPLTN_CO_80_89  , MALE_POPLTN_CO_90_99  , MALE_POPLTN_CO_100
           , FEMALE_POPLTN_CO_0_9  , FEMALE_POPLTN_CO_10_19, FEMALE_POPLTN_CO_20_29
           , FEMALE_POPLTN_CO_30_39, FEMALE_POPLTN_CO_40_49, FEMALE_POPLTN_CO_50_59
           , FEMALE_POPLTN_CO_60_69, FEMALE_POPLTN_CO_70_79, FEMALE_POPLTN_CO_80_89, FEMALE_POPLTN_CO_90_99, FEMALE_POPLTN_CO_100
           , POPLTN_CO_0_9         , POPLTN_CO_10_19, POPLTN_CO_20_29
           , POPLTN_CO_30_39       , POPLTN_CO_40_49, POPLTN_CO_50_59
           , POPLTN_CO_60_69       , POPLTN_CO_70_79, POPLTN_CO_80_89, POPLTN_CO_90_99, POPLTN_CO_100
           , LVL1, LVL2
        FROM TB_POPLTN_DATA, (SELECT (tmp1.idx) AS LVL1 FROM (SELECT 1 as idx UNION SELECT 2 UNION SELECT 3) tmp1) LVL1, (SELECT (tmp2.idx) AS LVL2 FROM (SELECT 1 as idx UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10 UNION SELECT 11) tmp2) LVL2
     ) A ;

COMMIT;

select * from TB_POPLTN;

# 2023년 4월 기준 전국의 성별 인구수 합계를 구하여 여성/남성 비율을 구해보기
#1) 남녀 인구수 합계
# 컬럼을 선택해서 연산에 활용한다! 인덱스 활용 못함
select A.POPLTN_SE_CD,
	  #sum(A.POPLTN_CNT) as AGRDE_POPLTN_CNT
		CASE 
			WHEN A.POPLTN_SE_CD = 'M' THEN SUM(A.POPLTN_CNT) 
			ELSE 0 
		END AS MALE_AGRADE_POPLTN_CNT,
		CASE 
			WHEN A.POPLTN_SE_CD = 'F' THEN SUM(A.POPLTN_CNT) 
			ELSE 0 
		END AS FEMALE_AGRADE_POPLTN_CNT
from TB_POPLTN A
where A.ADMINIST_ZONE_NO LIKE '__00000000'
	AND A.popltn_se_cd in ('M', 'F')
	AND A.std_mt = '202304'
group by A.popltn_se_cd;

#2) 남녀 비율 구하기
select 	B.MALE_AGRADE_POPLTN_CNT AS "남자_인구수",
		B.FEMALE_AGRADE_POPLTN_CNT AS "여자_인구수",
        ROUND(B.MALE_AGRADE_POPLTN_CNT / B.FEMALE_AGRADE_POPLTN_CNT * 100, 4)  AS "남자/여자 비율",
        ROUND(B.MALE_AGRADE_POPLTN_CNT/(B.MALE_AGRADE_POPLTN_CNT + B.FEMALE_AGRADE_POPLTN_CNT) * 100, 4) AS "전체 인구수 대비 남자비율",
        ROUND(B.FEMALE_AGRADE_POPLTN_CNT/(B.MALE_AGRADE_POPLTN_CNT + B.FEMALE_AGRADE_POPLTN_CNT) * 100, 4) AS "전체 인구수 대비 여자비율"
from(
		select max(A.MALE_AGRADE_POPLTN_CNT) as MALE_AGRADE_POPLTN_CNT, 
			   max(A.FEMALE_AGRADE_POPLTN_CNT) as FEMALE_AGRADE_POPLTN_CNT
		from (
				select A.POPLTN_SE_CD,
						#sum(A.POPLTN_CNT) as AGRDE_POPLTN_CNT
						CASE 
							WHEN A.POPLTN_SE_CD = 'M' THEN SUM(A.POPLTN_CNT) 
							ELSE 0 
						END AS MALE_AGRADE_POPLTN_CNT,
						CASE 
							WHEN A.POPLTN_SE_CD = 'F' THEN SUM(A.POPLTN_CNT) 
							ELSE 0 
						END AS FEMALE_AGRADE_POPLTN_CNT
				from TB_POPLTN A
				where A.ADMINIST_ZONE_NO LIKE '__00000000'
					AND A.popltn_se_cd in ('M', 'F')
					AND A.std_mt = '202304'
				group by A.popltn_se_cd ) as A) as B;
                
                
# 2023년 04월 기준 전국 주요 시/도의 연령대별 인구수 합계 where popltn_se_cd T, AGRADESECD        
select AGRDE_SE_CD, 
		sum(POPLTN_CNT) as AGRDE_POPLTN_CNT
from TB_POPLTN
where ADMINIST_ZONE_NO LIKE '__00000000' 
	AND POPLTN_SE_CD='T'
    AND STD_MT='202304'
group by AGRDE_SE_CD
order by AGRDE_SE_CD;


# 성별 구분을 'T'말고 'M', 'F'를 이용해서 구하기    
select AGRDE_SE_CD, 
		sum(POPLTN_CNT) as AGRDE_POPLTN_CNT
from TB_POPLTN
where ADMINIST_ZONE_NO LIKE '__00000000' 
	AND POPLTN_SE_CD=('M' or 'F')
    AND STD_MT='202304'
group by AGRDE_SE_CD
order by AGRDE_SE_CD;


#2023년 4월 기준 전국 주요 시/도의 연령대별 인구수 합계를 구하고, 연령대별 인구비율 구하기
# 이중쿼리 사용
SELECT A.AGRDE_POPLTN_CNT, B.TOTAL_POP
FROM (SELECT AGRDE_SE_CD, 
             SUM(POPLTN_CNT) AS AGRDE_POPLTN_CNT
      FROM TB_POPLTN 
      WHERE ADMINIST_ZONE_NO LIKE '__00000000' 
            AND POPLTN_SE_CD = 'T'
            AND STD_MT = '202304'
      GROUP BY AGRDE_SE_CD
      ORDER BY AGRDE_SE_CD) A
JOIN (
      SELECT B.AGRDE_SE_CD, SUM(AGRDE_POPLTN_CNT) AS TOTAL_POP
      FROM (
            SELECT A.AGRDE_SE_CD, 
                   SUM(A.POPLTN_CNT) AS AGRDE_POPLTN_CNT
            FROM TB_POPLTN A
            WHERE A.ADMINIST_ZONE_NO LIKE '__00000000' 
                  AND A.POPLTN_SE_CD = 'T'
                  AND A.STD_MT = '202304'
            GROUP BY A.AGRDE_SE_CD, A.ADMINIST_ZONE_NO
            ORDER BY A.AGRDE_SE_CD
           ) AS A
      GROUP BY B.AGRDE_SE_CD
      ) B ON A.AGRDE_SE_CD = B.AGRDE_SE_CD;
    

# over 함수 사용
select A.AGRDE_SE_CD, 
	   A.AGRDE_POPLTN_CNT,
       ROUND(A.AGRDE_POPLTN_CNT/(sum(A.AGRDE_POPLTN_CNT) over())*100,2) as SUM_AGRDE_POPLTN_CNT

from (
	select A.AGRDE_SE_CD, 
			sum(A.POPLTN_CNT) as AGRDE_POPLTN_CNT
				
	from TB_POPLTN A
	where A.ADMINIST_ZONE_NO LIKE '__00000000' 
		AND A.POPLTN_SE_CD='T'
		AND A.STD_MT='202304'
	group by A.AGRDE_SE_CD
	order by A.AGRDE_SE_CD) A;




# 연령대별 인구가 가장 많은 지역 구하기(읍/면/동)
select A.AGRDE_SE_CD,
	   A.ADMINIST_ZONE_NO,
       A.ADMINIST_ZONE_NM,
       A.POPLTN_CNT

from TB_POPLTN A

where A.ADMINIST_ZONE_NO NOT LIKE '_____00000' # 뒤 다섯 자리가 00000이면 구를 의미.
  and A. POPLTN_SE_CD = 'T'
  and A.STD_MT = '202304'
  and A.POPLTN_CNT > 0
order by A.POPLTN_CNT desc;



#2023년 04월 기준 전국의 읍/면/동의 전체 인구수를 조회 후 연령대별 인국가 가장 많은 지역을 조회
SELECT B.AGRDE_SE_CD,
	   B.ADMINIST_ZONE_NO,
	   B.ADMINIST_ZONE_NM,
	   B.POPLTN_CNT
FROM (
  SELECT A.AGRDE_SE_CD,
	     A.ADMINIST_ZONE_NO,
	     A.ADMINIST_ZONE_NM,
	     A.POPLTN_CNT,
         ROW_NUMBER() OVER (PARTITION BY A.AGRDE_SE_CD ORDER BY A.POPLTN_CNT DESC) AS RNUM
  FROM (
    SELECT T.AGRDE_SE_CD,
	       T.ADMINIST_ZONE_NO,
	       T.ADMINIST_ZONE_NM,
	       T.POPLTN_CNT
    FROM TB_POPLTN T
    WHERE T.ADMINIST_ZONE_NO NOT LIKE '_____00000'
      AND T.POPLTN_SE_CD = 'T'
      AND STD_MT = '202304'
      AND T.POPLTN_CNT > 0
    ORDER BY T.POPLTN_CNT DESC
    ) AS A
  ) AS B
WHERE B.RNUM = 1
ORDER BY B.AGRDE_SE_CD;



# 23년 04월 기준 전국의 각 지역의 연령대별 인구수 비율이 높은 지역(읍/면/동)
# Join 써서
select B.AGRDE_SE_CD, 
	   B.ADMINIST_ZONE_NM, 
       B.POPLTN_CNT,
       B.ratio,
       B.RNUM
from(
	select A.AGRDE_SE_CD, 
		   A.ADMINIST_ZONE_NM, 
		   A.POPLTN_CNT, 
		   B.ZONE_SUM, 
		   round(A.POPLTN_CNT / B.ZONE_SUM *100, 2) as ratio,
		   ROW_NUMBER() OVER (PARTITION BY A.AGRDE_SE_CD ORDER BY round(A.POPLTN_CNT / B.ZONE_SUM *100, 2) DESC) AS RNUM
	from 
		(SELECT T.AGRDE_SE_CD,
				   T.ADMINIST_ZONE_NO,
				   T.ADMINIST_ZONE_NM,
				   T.POPLTN_CNT
			FROM TB_POPLTN T
			WHERE T.ADMINIST_ZONE_NO NOT LIKE '_____00000'
			  AND T.POPLTN_SE_CD = 'T'
			  AND STD_MT = '202304'
			  AND T.POPLTN_CNT > 0) as A
	join (SELECT
			   T.ADMINIST_ZONE_NM,
			   sum(T.POPLTN_CNT) as ZONE_SUM
		FROM TB_POPLTN T
		WHERE T.ADMINIST_ZONE_NO NOT LIKE '_____00000'
		  AND T.POPLTN_SE_CD = 'T'
		  AND STD_MT = '202304'
		  AND T.POPLTN_CNT > 0	
		group by ADMINIST_ZONE_NM) as B
		on B.ADMINIST_ZONE_NM = A.ADMINIST_ZONE_NM
	) as B
WHERE B.RNUM = 1
ORDER BY B.AGRDE_SE_CD;



# 조인 없이 두 번 partition 써서 함
select table_ranked.AGRDE_SE_CD, 
	   table_ranked.ADMINIST_ZONE_NM,
       table_ranked.ratio,
       table_ranked.RNUM
       
from(
	select table_zonesum.AGRDE_SE_CD, 
		   table_zonesum.ADMINIST_ZONE_NM, 
		   table_zonesum.POPLTN_CNT, 
		   table_zonesum.ZONE_SUM, 
		   round(table_zonesum.POPLTN_CNT / table_zonesum.ZONE_SUM *100, 2) as ratio,
		   ROW_NUMBER() OVER (PARTITION BY table_zonesum.AGRDE_SE_CD ORDER BY round(table_zonesum.POPLTN_CNT / table_zonesum.ZONE_SUM *100, 2) DESC) AS RNUM
	from 
		(SELECT 
				T.AGRDE_SE_CD,
                T.ADMINIST_ZONE_NM,
				T.POPLTN_CNT,
				SUM(T.POPLTN_CNT) OVER (PARTITION BY ADMINIST_ZONE_NO) AS ZONE_SUM
		FROM TB_POPLTN T
		WHERE T.ADMINIST_ZONE_NO NOT LIKE '_____00000'
			AND T.POPLTN_SE_CD = 'T'
			AND STD_MT = '202304'
			AND T.POPLTN_CNT > 0
		) as table_zonesum
	) as table_ranked
WHERE table_ranked.RNUM = 1
ORDER BY table_ranked.AGRDE_SE_CD;

# 내가 어떤 식으로 집계를 하고 있는지 그림을 그리면서 해석해야함